plugins {
    id "org.springframework.boot"
}

description = "Basic Implemention of a Maven-Proxy."

dependencies {
    implementation("org.slf4j:slf4j-api")

    runtimeOnly("org.slf4j:slf4j-simple")

    testImplementation("io.netty:netty-all")
    testImplementation("org.junit.jupiter:junit-jupiter")
}

// Start: gradle bootRun --args="--spring.profiles.active=dev"
// The archive name. If the name has not been explicitly set, the pattern for the name is:
// [archiveBaseName]-[archiveAppendix]-[archiveVersion]-[archiveClassifier].[archiveExtension]
// archiveFileName = "my-boot.jar"
springBoot {
    mainClass = "de.freese.maven.proxy.MavenProxyLauncher"
}

bootJar {
    archiveClassifier = "spring"
    archiveFileName = "${archiveBaseName.get()}-${archiveClassifier.get()}.${archiveExtension.get()}"
    destinationDirectory = file("${projectDir}/app")
}

bootRun {
    jvmArgs = [
            "-Dmavenproxy.port=7999"
            , "-Xms32m"
            , "-Xmx64m"
            , "-XX:TieredStopAtLevel=1"
            , "-Djava.security.egd=file:/dev/./urandom"
            //, "-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"
    ]
}
//    springBoot {
//        buildInfo()
//    }

tasks.register("deleteAppFolder", Delete) {
    description "Delete app-Folder."
    group = "Maintenance"

    logger.lifecycle "delete app-Folder: ${projectDir}/app"

    delete fileTree("app") {
        include "**/*.*"
    }
}
clean.configure { finalizedBy deleteAppFolder }

bootJar.doLast {
    logger.lifecycle "copy to /opt/jvmapps/maven-proxy: ${archiveFileName.get()}"
    copy {
        from "${projectDir}/app/${archiveFileName.get()}"
        into "/opt/jvmapps/maven-proxy/"
    }
}
